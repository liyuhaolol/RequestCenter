apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'


android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode versions.versionCode
        versionName versions.versionName

        consumerProguardFiles 'consumer-rules.pro'
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    api "spa.lyh.cn:lib_https:${versions.lib_https}"
}

def siteUrl = 'https://github.com/liyuhaolol/RequestCenter'

def gitUrl = 'https://github.com/liyuhaolol/RequestCenter.git'

def libName = 'ft_httpcenter'

group = "spa.lyh.cn"

version = versions.versionName

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

artifacts {
    //archives javadocJar
    archives sourcesJar
}

install{
    repositories.mavenInstaller{
// This generates POM.xml with proper parameters
        pom{
            project{
                packaging 'aar'
                name 'Nice'
                url siteUrl
                licenses{
                    license{
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                dependencies{
                    dependency{
                        groupId 'spa.lyh.cn'
                        artifactId 'lib_https'
                        version versions.lib_https
                        scope 'api'
                    }
                }
                developers{
                    developer{
                        id 'liyuhao'
                        name 'liyuhao'
                        email 'liyuhaoid@sina.com'
                    }
                }
                scm{
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())


bintray{
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        repo = 'maven'
        //userOrg = 'lehaha'
        name = libName
        desc = 'Nice'
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
